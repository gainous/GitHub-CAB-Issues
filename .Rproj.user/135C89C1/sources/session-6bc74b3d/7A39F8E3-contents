CAB_data_2lsd = CAB_data_dem

library(scales)
##National Deferenders ####
CAB_data_2lsd$participate_rally_n_i = rescale(CAB_data_2lsd$participate_rally_n, to = c(1, 0)) # 1 means yes
CAB_data_2lsd$participate_meeting_n_i = rescale(CAB_data_2lsd$participate_meeting_n, to = c(1, 0)) # 1 means yes
CAB_data_2lsd$participate_member_n_i = rescale(CAB_data_2lsd$participate_member_n, to = c(1, 0)) # 1 means not at all


national_defenders= cbind(CAB_data_2lsd$system_capable_n_sc,
                          CAB_data_2lsd$system_proud_n_sc,
                          CAB_data_2lsd$system_deserves_n_sc,
                          CAB_data_2lsd$system_live_n_sc,
                          CAB_data_2lsd$trust_central_n_sc,
                          CAB_data_2lsd$trust_local_n_sc,
                          CAB_data_2lsd$democracy_protests_n_sc,
                          CAB_data_2lsd$participate_rally_n_i,
                          CAB_data_2lsd$participate_meeting_n_i,
                          CAB_data_2lsd$participate_member_n_i)
library(psy)
cronbach(national_defenders)

#creating an index of national defenders#
CAB_data_2lsd$national_defenders_index <- rescale(
  CAB_data_2lsd$system_capable_n_sc +
    CAB_data_2lsd$system_proud_n_sc +
    CAB_data_2lsd$system_deserves_n_sc +
    CAB_data_2lsd$system_live_n_sc +
    CAB_data_2lsd$trust_central_n_sc +
    CAB_data_2lsd$trust_local_n_sc +
    CAB_data_2lsd$democracy_protests_n_sc +
    CAB_data_2lsd$participate_rally_n_i +
    CAB_data_2lsd$participate_meeting_n_i +
    CAB_data_2lsd$participate_member_n_i,
  to = c(0, 1)
)
summary(CAB_data_2lsd$national_defenders_index)
hist(CAB_data_2lsd$national_defenders_index)


##Ideologically Consistent Conservatives Index ####
CAB_data_2lsd$trust_US_n_i=  rescale(CAB_data_2lsd$trust_US_n, to = c(0, 1)) # 1 means not at all
CAB_data_2lsd$trust_EU_n_i =  rescale(CAB_data_2lsd$trust_EU_n, to = c(0, 1)) # 1 means not at all

idconsisten_conserv = cbind(
  CAB_data_2lsd$trust_central_n_sc,
  CAB_data_2lsd$trust_local_n_sc,
  CAB_data_2lsd$system_capable_n_sc,
  CAB_data_2lsd$system_proud_n_sc,
  CAB_data_2lsd$trust_state_n_sc,
  CAB_data_2lsd$system_deserves_n_sc,
  CAB_data_2lsd$system_live_n_sc,
  CAB_data_2lsd$trust_US_n_i,
  CAB_data_2lsd$trust_china_n_sc,
  CAB_data_2lsd$trust_russia_n_sc,
  CAB_data_2lsd$trust_EU_n_i,
  CAB_data_2lsd$pol_news_tv_n_sc)
cronbach(idconsisten_conserv)

CAB_data_2lsd$idconsisten_conserv_index <- rescale(
  CAB_data_2lsd$trust_central_n_sc +
    CAB_data_2lsd$trust_local_n_sc +
    CAB_data_2lsd$system_capable_n_sc +
    CAB_data_2lsd$system_proud_n_sc +
    CAB_data_2lsd$trust_state_n_sc +
    CAB_data_2lsd$system_deserves_n_sc +
    CAB_data_2lsd$system_live_n_sc +
    CAB_data_2lsd$trust_US_n_i +
    CAB_data_2lsd$trust_china_n_sc +
    CAB_data_2lsd$trust_russia_n_sc +
    CAB_data_2lsd$trust_EU_n_i +
    CAB_data_2lsd$pol_news_tv_n_sc,
  to = c(0, 1)
)
summary(CAB_data_2lsd$idconsisten_conserv_index)
hist(CAB_data_2lsd$idconsisten_conserv_index)


#Silent Observers Index
library(scales)
names(CAB_data_2lsd)

#  Rescale the numeric values to the desired direction
CAB_data_2lsd$pol_discuss_n_sc_i <- rescale(CAB_data_2lsd$pol_discuss_n_sc, to = c(1, 0)) #1 means less
CAB_data_2lsd$sm_engage_friends_n_sc_no_i <- rescale(CAB_data_2lsd$sm_engage_friends_n_sc_no, to = c(1, 0)) # 1 meas less
CAB_data_2lsd$sm_engage_groups_n_sc_no_i = rescale(CAB_data_2lsd$sm_engage_groups_n_sc_no, to = c(1, 0)) # 1 meas less
CAB_data_2lsd$sm_engage_post_n_sc_no_i = rescale(CAB_data_2lsd$sm_engage_post_n_sc_no, to = c(1, 0)) # 1 meas less
CAB_data_2lsd$sm_engage_offline_n_sc_no_i = rescale(CAB_data_2lsd$sm_engage_offline_n_sc_no, to = c(1, 0)) # 1 meas less
CAB_data_2lsd$participate_meeting_n_sc = rescale(CAB_data_2lsd$participate_meeting_n, to = c(0, 1)) # 1 meas less
CAB_data_2lsd$participate_rally_n_sc = rescale(CAB_data_2lsd$participate_rally_n, to = c(0, 1)) # 1 meas less
CAB_data_2lsd$participate_member_n_sc = rescale(CAB_data_2lsd$participate_member_n, to = c(0, 1)) # 1 meas less


summary(CAB_data_2lsd$sm_engage_offline_n_sc_no)

table(CAB_data_dem$participate_rally_n_sc)

library(psy)
sil_obs <- cbind(
  CAB_data_2lsd$participate_meeting_n_sc,
  CAB_data_2lsd$participate_rally_n_sc,
  CAB_data_2lsd$participate_member_n_sc
)

cronbach(sil_obs)

Ambivalence = [(P+ N)/2] - |P - N|
  
  CAB_data_2lsd$sil_obs_index <- rescale(
    CAB_data_2lsd$pol_dis_silob +
      CAB_data_2lsd$sm_engage_friends_silob +
      CAB_data_2lsd$sm_engage_groups_silob +
      CAB_data_2lsd$sm_engage_post_silob +
      CAB_data_2lsd$sm_engage_supportive_silob +
      CAB_data_2lsd$sm_engage_offline_silob +
      CAB_data_2lsd$participate_rally_sil_obs,
    to = c(0, 1)
  )
table(CAB_data_2lsd$sil_obs_index)

CAB_data_2lsd$sm_engage_friends_smw =  rescale(CAB_data_2lsd$sm_engage_friends_n_sc_sm_no, to = c(0, 1)) # 1 means more
CAB_data_2lsd$sm_engage_groups_smw =  rescale(CAB_data_2lsd$sm_engage_groups_n_sc_sm_no, to = c(0, 1)) # 1 means more
CAB_data_2lsd$sm_engage_post_smw = rescale(CAB_data_2lsd$sm_engage_post_n_sc_sm_no, to = c(0, 1)) # 1 means more


#Digitally Politically Engaged
dig_pol_engage <- cbind(
  CAB_data_2lsd$sm_engage_friends_smw,
  CAB_data_2lsd$sm_engage_groups_smw,
  CAB_data_2lsd$sm_engage_post_smw)

cronbach(dig_pol_engage)

CAB_data_2lsd$dig_pol_engage_index <- rescale(
  CAB_data_2lsd$sm_engage_friends_smw+
    CAB_data_2lsd$sm_engage_groups_smw+
    CAB_data_2lsd$sm_engage_post_smw,
  to = c(0, 1)
)

# The Selective Avoiders ####
selective_avoiders = cbind(
  CAB_data_2lsd$avoidance_unfriending_n_sc_sm_no,
  CAB_data_2lsd$avoidance_blocking_n_sc_sm_no,
  CAB_data_2lsd$sm_disagreement_politics_n_sc_sm_no,
  CAB_data_2lsd$sm_disagreement_news_n_sc_sm_no,
  CAB_data_2lsd$sm_disagreement_issues_n_sc_sm_no)
cronbach(selective_avoiders)

CAB_data_2lsd$selective_avoiders_index <- rescale(
  CAB_data_2lsd$avoidance_unfriending_n_sc_sm_no + 
    CAB_data_2lsd$avoidance_blocking_n_sc_sm_no + 
    CAB_data_2lsd$sm_disagreement_politics_n_sc_sm_no + 
    CAB_data_2lsd$sm_disagreement_news_n_sc_sm_no + 
    CAB_data_2lsd$sm_disagreement_issues_n_sc_sm_no, 
  to = c(0, 1)
)


# List of social media platforms and corresponding variables
platforms <- c("facebook_n_sc", "vkontakte_n_sc", "instagram_n_sc", "tiktok_n_sc", "twitter_n_sc", "youtube_n_sc", "whatsapp_n_sc", "telegram_n_sc")
variables <- c("facebook_n", "vkontakte_n", "instagram_n", "tiktok_n", "twitter_n", "youtube_n", "whatsapp_n", "telegram_n")

library(dplyr)
# Loop over each platform and create numeric versions of each social media usage variable
for (i in seq_along(variables)) {
  CAB_data_2lsd <- CAB_data_2lsd %>%
    mutate(
      !!paste0(platforms[i], "_1sm_no") := case_when(
        q22 == 2 ~ 0,       # Set to 0 if q22 is 2
        TRUE ~ as.numeric(.data[[variables[i]]])  # Use the corresponding q23_ variable
      )
    )
}

# Rescale the new numeric columns to range 0-1
CAB_data_2lsd <- CAB_data_2lsd %>%
  mutate(
    across(ends_with("_1sm_no"), ~ scales::rescale(., to = c(0, 1)))
  )

# Display summaries for verification
for (platform in platforms) {
  print(paste0("Summary for ", platform, " (numeric):"))
  print(summary(CAB_data_2lsd[[paste0(platform, "_1sm_no")]]))
}

table(CAB_data_2lsd$q23_a)
table(CAB_data_2lsd$q22)
table(CAB_data_2lsd$facebook_n_sc_1sm_no)
table(CAB_data_2lsd$facebook_n)

library(scales)
CAB_data_2lsd$xxx = rescale(CAB_data_2lsd$q, to = c(0,1))
table(CAB_data_2lsd$xxx)





library(psy)
##General Social Media Index####
gen_sm_index = cbind(
  CAB_data_2lsd$facebook_n_sc_no,
  CAB_data_2lsd$vkontakte_n_sc_no,
  CAB_data_2lsd$instagram_n_sc_no,
  CAB_data_2lsd$tiktok_n_sc_no,
  CAB_data_2lsd$twitter_n_sc_no)
cronbach(gen_sm_index)

CAB_data_2lsd$gen_sm_index <-  rescale(
  CAB_data_2lsd$facebook_n_sc_no +
    CAB_data_2lsd$vkontakte_n_sc_no +
    CAB_data_2lsd$instagram_n_sc_no +
    CAB_data_2lsd$tiktok_n_sc_no +
    CAB_data_2lsd$twitter_n_sc_no, 
  to = c(0, 1)
)
hist(CAB_data_2lsd$gen_sm_index)

##Algorithm-Driven Social Media Index ####
CAB_data_2lsd$algdriven_sm_index <- rescale(
  CAB_data_2lsd$instagram_n_sc_1sm_no +
    CAB_data_2lsd$tiktok_n_sc_1sm_no +
    CAB_data_2lsd$twitter_n_sc_1sm_no,
  to = c(0, 1)
)
hist(CAB_data_2lsd$algdriven_sm_index)


##Social Network Driven SM Index###
CAB_data_2lsd$socnet_driven_sm_index <- rescale(
  CAB_data_2lsd$facebook_n_sc_1sm_no +
    CAB_data_2lsd$vkontakte_n_sc_1sm_no,
  to = c(0, 1)
)

table(CAB_data_2lsd$socnet_driven_sm_index)
hist(CAB_data_2lsd$socnet_driven_sm_index)

##Trust on Legacy Media####
CAB_data_2lsd$trust_legacy <- rescale(
  CAB_data_2lsd$trust_state_n_sc +
    CAB_data_2lsd$trust_russian_media_n_sc,
  to = c(0, 1)
)

table(CAB_data_2lsd$trust_state_n_sc)
table(CAB_data_2lsd$trust_russian_media_n_sc)
table(CAB_data_2lsd$trust_legacy)


##Trust on Western Media####
table(CAB_data_2lsd$trust_western_n_sc)


##Trust on Russian Media####
CAB_data_2lsd$trust_russia_both <- rescale(
  CAB_data_2lsd$trust_vkontakte_n_sc_combined +
    CAB_data_2lsd$trust_russian_media_n_sc,
  to = c(1, 0)
)

table(CAB_data_2lsd$trust_russia_both)


names(CAB_data_2lsd)


##Western Political News####
west_src_pol_events = cbind(
  CAB_data_2lsd$pol_news_facebook_n_sc_combined,
  CAB_data_2lsd$pol_news_twitter_n_sc_combined)
cronbach(west_src_pol_events) #.16

CAB_data_2lsd$west_src_pol_events <- rescale(
  CAB_data_2lsd$pol_news_facebook_n_sc +
    CAB_data_2lsd$pol_news_twitter_n_sc, to = c(0, 1)
)

table(CAB_data_2lsd$west_src_pol_events)
hist(CAB_data_2lsd$west_src_pol_events)

names(CAB_data_2lsd)


##Critical Social Media Index####
platforms <- c("sm_critical_local_n_sc", "sm_critical_central_n_sc", "sm_positive_local_n_sc", "sm_positive_central_n_sc")
variables <- c("sm_critical_local_n_sc", "sm_critical_central_n_sc", "sm_positive_local_n_sc", "sm_positive_central_n_sc")

library(dplyr)
# Loop over each platform and create numeric versions of each social media usage variable
for (i in seq_along(variables)) {
  CAB_data_2lsd <- CAB_data_2lsd %>%
    mutate(
      !!paste0(platforms[i], "_2sm_no") := case_when(
        q22 == 2 ~ 0,       # Set to 0 if q22 is 2
        TRUE ~ as.numeric(.data[[variables[i]]])  # Use the corresponding q23_ variable
      )
    )
}

# Rescale the new numeric columns to range 0-1
CAB_data_2lsd <- CAB_data_2lsd %>%
  mutate(
    across(ends_with("_2sm_no"), ~ scales::rescale(., to = c(0, 1)))
  )

# Display summaries for verification
for (platform in platforms) {
  print(paste0("Summary for ", platform, " (numeric):"))
  print(summary(CAB_data_2lsd[[paste0(platform, "_1sm_no")]]))
}



#Critical Social Media Index
CAB_data_2lsd$critical_social_media = cbind(
  CAB_data_2lsd$sm_critical_local_n_sc_no,
  CAB_data_2lsd$sm_critical_central_n_sc_no)
cronbach(CAB_data_2lsd$critical_social_media)

library(scales)
CAB_data_2lsd$critical_social_media = rescale(
  CAB_data_2lsd$sm_critical_local_n_sc_no +
    CAB_data_2lsd$sm_critical_central_n_sc_no,
  to = c(0,1)
)
hist(CAB_data_2lsd$critical_social_media)

CAB_data_2lsd$positive_social_media = cbind(
  CAB_data_2lsd$sm_positive_local_n_sc_sm_no,
  CAB_data_2lsd$sm_positive_central_n_sc_sm_no)
library(psy)
cronbach(CAB_data_2lsd$positive_social_media)

library(scales)
CAB_data_2lsd$positive_social_media = rescale(
  CAB_data_2lsd$sm_positive_local_n_sc_sm_no +
    CAB_data_2lsd$sm_positive_central_n_sc_sm_no,
  to = c(0,1)
)
summary(CAB_data_2lsd$positive_social_media)
hist(CAB_data_2lsd$positive_social_media)



##Social Media Engagement####
platforms <- c("sm_engage_friends_n_sc", "sm_engage_groups_n_sc", "sm_engage_post_n_sc", "sm_engage_critical_n_sc", "sm_engage_supportive_n_sc", "sm_engage_offline_n_sc")
variables <- c("q38_a", "q38_b", "q38_c", "q38_d", "q38_e")

library(dplyr)
# Loop over each platform and create numeric versions of each social media usage variable
for (i in seq_along(variables)) {
  CAB_data_2lsd <- CAB_data_2lsd %>%
    mutate(
      !!paste0(platforms[i], "_3sm_no") := case_when(
        q22 == 2 ~ 0,       # Set to 0 if q22 is 2
        TRUE ~ as.numeric(.data[[variables[i]]])  # Use the corresponding q23_ variable
      )
    )
}


#This is the Code that Works
library(dplyr)
# Create new variables combining the 0 values from set 1 and set 2
CAB_data_2lsd <- CAB_data_2lsd %>%
  mutate(
    pol_news_facebook_n_sc_combined = ifelse(facebook_n_sc_1sm_no == 0, 0, pol_news_facebook_n_sc),
    pol_news_vkontakte_n_sc_combined = ifelse(vkontakte_n_sc_1sm_no == 0, 0, pol_news_vkontakte_n_sc),
    pol_news_tiktok_n_sc_combined = ifelse(tiktok_n_sc_1sm_no == 0, 0, pol_news_tiktok_n_sc),
    pol_news_twitter_n_sc_combined = ifelse(twitter_n_sc_1sm_no == 0, 0, pol_news_twitter_n_sc)
  )


table(CAB_data_2lsd$trust_facebook_n_sc)
CAB_data_2lsd <- CAB_data_2lsd %>%
  mutate(
    trust_facebook_n_sc_combined = ifelse(facebook_n_sc_1sm_no == 0, 0, trust_facebook_n_sc),
    trust_vkontakte_n_sc_combined = ifelse(vkontakte_n_sc_1sm_no == 0, 0, trust_vkontakte_n_sc)
  )

table(CAB_data_2lsd$trust_vkontakte_n_sc_combined)

# List of social media platforms and corresponding variables
table(CAB_data_2lsd$sm_critical_central_n_sc)
platforms1 <- c("sm_critical_central_n_sc", "sm_critical_local_n_sc")
variables1 <- c("sm_critical_central_n_sc", "sm_critical_local_n_sc")

library(dplyr)
# Loop over each platform and create numeric versions of each social media usage variable
for (i in seq_along(variables1)) {
  CAB_data_2lsd <- CAB_data_2lsd %>%
    mutate(
      !!paste0(platforms1[i], "_sm_no") := case_when(
        q22 == 2 ~ 0,       # Set to 0 if q22 is 2
        TRUE ~ as.numeric(.data[[variables1[i]]])  # Use the corresponding variable
      )
    )
}


# List of social media platforms and corresponding variables
table(CAB_data_2lsd$sm_positive_central_n_sc)
platformsG <- c("sm_engage_friends_n_sc","sm_engage_groups_n_sc","sm_engage_post_n_sc","sm_engage_critical_n_sc","sm_engage_supportive_n_sc", "sm_engage_offline_n_sc")
variablesG <- c("sm_engage_friends_n_sc","sm_engage_groups_n_sc","sm_engage_post_n_sc","sm_engage_critical_n_sc","sm_engage_supportive_n_sc", "sm_engage_offline_n_sc")

library(dplyr)
# Loop over each platform and create numeric versions of each social media usage variable
for (i in seq_along(variablesG)) {
  CAB_data_2lsd <- CAB_data_2lsd %>%
    mutate(
      !!paste0(platformsG[i], "_sm_no") := case_when(
        q22 == 2 ~ 0,       # Set to 0 if q22 is 2
        TRUE ~ as.numeric(.data[[variablesG[i]]])  # Use the corresponding variable
      )
    )
}

# Display summaries for verification
for (platform in platformsG) {
  print(paste0("Summary for ", platform, " (numeric):"))
  print(summary(CAB_data_2lsd[[paste0(platform, "_sm_no")]]))
}

table(CAB_data_2lsd$sm_engage_friends_n_sc)
table(CAB_data_2lsd$sm_engage_friends_n_sc_sm_no)




#Social Media Engagement Index##
sm_engage_index = cbind(
  CAB_data_2lsd$sm_engage_friends_n_sc_sm_no,
  CAB_data_2lsd$sm_engage_groups_n_sc_sm_no,
  CAB_data_2lsd$sm_engage_post_n_sc_sm_no,
  CAB_data_2lsd$sm_engage_critical_n_sc_sm_no,
  CAB_data_2lsd$sm_engage_supportive_n_sc_sm_no,
  CAB_data_2lsd$sm_engage_offline_n_sc_sm_no)
cronbach(sm_engage_index)

CAB_data_2lsd$sm_engage_index = rescale(
  CAB_data_2lsd$sm_engage_friends_n_sc_sm_no +
    CAB_data_2lsd$sm_engage_groups_n_sc_sm_no +
    CAB_data_2lsd$sm_engage_post_n_sc_sm_no +
    CAB_data_2lsd$sm_engage_critical_n_sc_sm_no +
    CAB_data_2lsd$sm_engage_supportive_n_sc_sm_no +
    CAB_data_2lsd$sm_engage_offline_n_sc_sm_no,
  to = c(0, 1)
)

table(CAB_data_2lsd$sm_engage_index)
hist(CAB_data_2lsd$sm_engage_friends_n_sc_sm_no)

#Critical TV Index
CAB_data_2lsd$critical_tv_index = cbind(
  CAB_data_2lsd$tv_critical_local_n_sc,
  CAB_data_2lsd$tv_critical_central_n_sc)
cronbach(CAB_data_2lsd$critical_tv_index)

CAB_data_2lsd$critical_tv_index = rescale(
  CAB_data_2lsd$tv_critical_local_n_sc +
    CAB_data_2lsd$tv_critical_central_n_sc,
  to = c(1, 0)
)




#Critical TV Index
CAB_data_2lsd$critical_tv_index = cbind(
  CAB_data_2lsd$tv_critical_local_n_sc,
  CAB_data_2lsd$tv_critical_central_n_sc)
cronbach(CAB_data_2lsd$critical_tv_index)

CAB_data_2lsd$critical_tv_index = rescale(
  CAB_data_2lsd$tv_critical_local_n_sc +
    CAB_data_2lsd$tv_critical_central_n_sc,
  to = c(1, 0)
)



hist(CAB_data_2lsd$national_defenders_index)
hist(CAB_data_2lsd$idconsisten_conserv_index)
hist(CAB_data_2lsd$surv_averse_lib_index)
hist(CAB_data_2lsd$gen_sm_index)
hist(CAB_data_2lsd$algdriven_sm_index)
hist(CAB_data_2lsd$socnet_driven_sm_index)
hist(CAB_data_2lsd$sm_engage_index)
hist(CAB_data_2lsd$critical_tv_index)
hist(CAB_data_2lsd$trust_legacy)
hist(CAB_data_2lsd$trust_russia_both)
hist(CAB_data_2lsd$critical_social_media)

################################################################################3
#Create country dummies
# Generating dummy variables using model.matrix
dummy_vars <- model.matrix(~ country - 1, data = CAB_data_2lsd)

# Renaming the dummy variables
# Replace spaces with underscores and prepend with the variable name for clarity
colnames(dummy_vars) <- gsub(" ", "_", colnames(dummy_vars))
colnames(dummy_vars) <- gsub("country", "country_", colnames(dummy_vars))

# Binding the dummy variables back to the original data frame
CAB_data_2lsd <- cbind(CAB_data_2lsd, dummy_vars)
rm(dummy_vars)

write.csv(CAB_data_2lsd, "cab_data_2lsd.csv")

summary(lm(critical_social_media ~ national_defenders_index + gen_sm_index + age_n_sc + urbanicity_Village + gender_Male + edu_n_sc + inc_n_sc + country_KZ + country_KG, data = CAB_data_2lsd))
