# Loop over each platform and create numeric versions of each social media usage variable
for (i in seq_along(variables)) {
CAB_data_dem <- CAB_data_dem %>%
mutate(
!!paste0(platforms[i], "from_sm_no_n") := case_when(
q22 == 2 ~ 4,       # Set to 0 if q22 is 2
TRUE ~ as.numeric(.data[[variables[i]]])  # Use the corresponding q27_ variable
)
)
}
# Rescale the new numeric columns to range 1-0
CAB_data_dem <- CAB_data_dem %>%
mutate(
across(ends_with("no_n"), ~ rescale(., to = c(1, 0)))
)
# Display summaries for verification
for (platform in platforms) {
print(paste0("Summary for ", platform, " (numeric):"))
print(summary(CAB_data_dem[[paste0(platform, "from_sm_no_n")]]))
}
names(CAB_data_dem)
# List of social media platforms and corresponding variables
platforms <- c("facebook", "vkontakte", "instagram", "tiktok", "twitter", "youtube", "whatsapp", "telegram")
variables <- c("q23_a", "q23_b", "q23_c", "q23_d", "q23_e", "q23_f", "q23_g", "q23_h")
# Loop over each platform and create numeric versions of each social media usage variable
for (i in seq_along(variables)) {
CAB_data_dem <- CAB_data_dem %>%
mutate(
!!paste0(platforms[i], "_sm_no_n") := case_when(
q22 == 2 ~ 0,       # Set to 0 if q22 is 2
TRUE ~ as.numeric(.data[[variables[i]]])  # Use the corresponding q23_ variable
)
)
}
# Rescale the new numeric columns to range 0-1
CAB_data_dem <- CAB_data_dem %>%
mutate(
across(ends_with("_sm_no_n"), ~ rescale(., to = c(0, 1)))
)
# Display summaries for verification
for (platform in platforms) {
print(paste0("Summary for ", platform, " (numeric):"))
print(summary(CAB_data_dem[[paste0(platform, "_sm_no_n")]]))
}
names(CAB_data_dem)
rm(aldriven_sm_index)
rm(algdriven_sm_index)
source("~/.active-rstudio-document", echo=TRUE)
rm(list=ls(type="Values"))
rm(list=ls(type="Values"))
rm(list = ls())
load("~/GitHub/GitHub-CAB-Issues/CAB_data.RData")
rm(var1, var2, var3)
rm(algdriven_sm_index, critical_tv_index, digital_src_pol_news, eco_issues, env_issues, gen_sm_index, i, national_defenders, platform, platform_c, platforms, platforms_c, pol_issues, sec_issues, sm_engage_index, sm_pol_news, sm_positive, soc_issues, suffix, trust_legacy, trust_legacy, trust_russia_both, trust_western_n_sc, variables, variables_c, west_src_pol_events)
rm(avoidance_matrix, critical_social_media, idconsisten_conserv, sm_disagreement_matrix, surv_averse_lib)
rm(CAB_data_Recoded)
rm(mod_econ)
View(CAB_data_dem)
View(CAB_data)
View(CAB_data_dem)
load("~/GitHub/GitHub-CAB-Issues/CAB_data_issues.RData")
View(CAB_data)
View(CAB_data)
list(CAB_data)
list(CAB_data_dem)
load("~/GitHub/GitHub-CAB-Issues/CAB_data.RData")
load("~/GitHub/GitHub-CAB-Issues/CAB_data.RData")
CAB_data_dem = rbindlist(list(GA_data,KG_data,KZ_data), fill = TRUE)
library(data.table)
CAB_data_dem = rbindlist(list(GA_data,KG_data,KZ_data), fill = TRUE)
table(CAB_data_dem$country)
rm(avoidance_matrix, critical_social_media, CAB_data_Recoded, critical_social_media, idconsisten_conserv,
mod_econ, sm_disagreement_matrix, surv_averse_lib, algdriven_sm_index, critical_social_media, digital_src_pol_news, eco_issues, env_issues,
gen_sm_index, i, national_defenders, platform, platform_c, platforms, platforms_c, pol_issues, sec_issues, sm_engage_index, sm_pol_news, sm_positive, soc_issues, suffix, trust_legacy, trust_russia_both, trust_western_n_sc, variables, variables_c, west_src_pol_events)
rm(critical_tv_index)
library(dplyr)
library(scales)
cbind(CAB_data_dem$system_capable_n_sc,
CAB_data_dem$system_proud_n_sc,
CAB_data_dem$system_deserves_n_sc,
CAB_data_dem$system_live_n_sc,
CAB_data_dem$trust_central_n_sc,
CAB_data_dem$trust_local_n_sc,
CAB_data_dem$democracy_protests_n_sc,
CAB_data_dem$participate_rally_nat_def,
CAB_data_dem$participate_meeting_nat_def,
CAB_data_dem$participate_member_nat_def)
cbind(CAB_data_dem$system_capable_n_sc,
CAB_data_dem$system_proud_n_sc,
CAB_data_dem$system_deserves_n_sc,
CAB_data_dem$system_live_n_sc,
CAB_data_dem$trust_central_n_sc,
CAB_data_dem$trust_local_n_sc,
CAB_data_dem$democracy_protests_n_sc,
CAB_data_dem$participate_rally_nat_def,
CAB_data_dem$participate_meeting_nat_def,
CAB_data_dem$participate_member_nat_def)
cronbach(national_defenders)
library(psy)
cronbach(national_defenders)
cbind(CAB_data_dem$system_capable_n_sc,
CAB_data_dem$system_proud_n_sc,
CAB_data_dem$system_deserves_n_sc,
CAB_data_dem$system_live_n_sc,
CAB_data_dem$trust_central_n_sc,
CAB_data_dem$trust_local_n_sc,
CAB_data_dem$democracy_protests_n_sc,
CAB_data_dem$participate_rally_nat_def,
CAB_data_dem$participate_meeting_nat_def,
CAB_data_dem$participate_member_nat_def)
library(psy)
cronbach(national_defenders)
#creating an index of national defenders####
CAB_data_dem$national_defenders_index <- rescale(
CAB_data_dem$system_capable_n_sc +
CAB_data_dem$system_proud_n_sc +
CAB_data_dem$system_deserves_n_sc +
CAB_data_dem$system_live_n_sc +
CAB_data_dem$sm_engage_supportive_sc +
CAB_data_dem$sm_critical_local_n_sc +
CAB_data_dem$sm_critical_central_n_sc +
CAB_data_dem$sm_positive_local_n_sc +
CAB_data_dem$sm_positive_central_n_sc +
CAB_data_dem$trust_central_n_sc +
CAB_data_dem$trust_local_n_sc +
CAB_data_dem$democracy_protests_n_sc +
CAB_data_dem$participate_rally_nat_def +
CAB_data_dem$participate_meeting_nat_def +
CAB_data_dem$participate_member_nat_def,
to = c(0, 1)
)
cbind(CAB_data_dem$system_capable_n_sc,
CAB_data_dem$system_proud_n_sc,
CAB_data_dem$system_deserves_n_sc,
CAB_data_dem$system_live_n_sc,
CAB_data_dem$trust_central_n_sc,
CAB_data_dem$trust_local_n_sc,
CAB_data_dem$democracy_protests_n_sc,
CAB_data_dem$participate_rally_nat_def,
CAB_data_dem$participate_meeting_nat_def,
CAB_data_dem$participate_member_nat_def)
library(psy)
cronbach(national_defenders)
national_defenders= cbind(CAB_data_dem$system_capable_n_sc,
CAB_data_dem$system_proud_n_sc,
CAB_data_dem$system_deserves_n_sc,
CAB_data_dem$system_live_n_sc,
CAB_data_dem$trust_central_n_sc,
CAB_data_dem$trust_local_n_sc,
CAB_data_dem$democracy_protests_n_sc,
CAB_data_dem$participate_rally_nat_def,
CAB_data_dem$participate_meeting_nat_def,
CAB_data_dem$participate_member_nat_def)
library(psy)
cronbach(national_defenders)
#national_defenders####
#without any social media variable
CAB_data_dem$participate_rally_nat_def = rescale(CAB_data_dem$participate_rally_n, to = c(1, 0)) # 1 means yes
CAB_data_dem$participate_meeting_nat_def = rescale(CAB_data_dem$participate_meeting_n, to = c(1, 0)) # 1 means yes
CAB_data_dem$participate_member_nat_def = rescale(CAB_data_dem$participate_member_n, to = c(1, 0)) # 1 means not at all
national_defenders= cbind(CAB_data_dem$system_capable_n_sc,
CAB_data_dem$system_proud_n_sc,
CAB_data_dem$system_deserves_n_sc,
CAB_data_dem$system_live_n_sc,
CAB_data_dem$trust_central_n_sc,
CAB_data_dem$trust_local_n_sc,
CAB_data_dem$democracy_protests_n_sc,
CAB_data_dem$participate_rally_nat_def,
CAB_data_dem$participate_meeting_nat_def,
CAB_data_dem$participate_member_nat_def)
library(psy)
cronbach(national_defenders)
#creating an index of national defenders####
CAB_data_dem$national_defenders_index <- rescale(
CAB_data_dem$system_capable_n_sc +
CAB_data_dem$system_proud_n_sc +
CAB_data_dem$system_deserves_n_sc +
CAB_data_dem$system_live_n_sc +
CAB_data_dem$trust_central_n_sc +
CAB_data_dem$trust_local_n_sc +
CAB_data_dem$democracy_protests_n_sc +
CAB_data_dem$participate_rally_nat_def +
CAB_data_dem$participate_meeting_nat_def +
CAB_data_dem$participate_member_nat_def,
to = c(0, 1)
)
summary(CAB_data_dem$national_defenders)
hist(CAB_data_dem$national_defenders_index)
##Ideologically Consistent Conservatives Index ####
CAB_data_dem$trust_US_negative =  rescale(CAB_data_dem$trust_US_n, to = c(0, 1)) # 1 means not at all
CAB_data_dem$trust_EU_negative =  rescale(CAB_data_dem$trust_EU_n, to = c(0, 1)) # 1 means not at all
idconsisten_conserv = cbind(
CAB_data_dem$trust_central_n_sc,
CAB_data_dem$trust_local_n_sc,
CAB_data_dem$system_capable_n_sc,
CAB_data_dem$system_proud_n_sc,
CAB_data_dem$trust_state_n_sc,
CAB_data_dem$system_deserves_n_sc,
CAB_data_dem$system_live_n_sc,
CAB_data_dem$trust_US_negative,
CAB_data_dem$trust_china_n_sc,
CAB_data_dem$trust_russia_n_sc,
CAB_data_dem$trust_EU_negative,
CAB_data_dem$pol_news_tv_n_sc)
cronbach(idconsisten_conserv)
summary(CAB_data_dem$idconsisten_conserv_index)
hist(CAB_data_dem$idconsisten_conserv_index)
CAB_data_dem$idconsisten_conserv <- rescale(
CAB_data_dem$trust_central_n_sc +
CAB_data_dem$trust_local_n_sc +
CAB_data_dem$system_capable_n_sc +
CAB_data_dem$system_proud_n_sc +
CAB_data_dem$trust_state_n_sc +
CAB_data_dem$system_deserves_n_sc +
CAB_data_dem$system_live_n_sc +
CAB_data_dem$trust_US_negative +
CAB_data_dem$trust_china_n_sc +
CAB_data_dem$trust_russia_n_sc +
CAB_data_dem$trust_EU_negative +
CAB_data_dem$pol_news_tv_n_sc,
to = c(0, 1)
)
summary(CAB_data_dem$idconsisten_conserv_index)
##Ideologically Consistent Conservatives Index ####
CAB_data_dem$trust_US_negative =  rescale(CAB_data_dem$trust_US_n, to = c(0, 1)) # 1 means not at all
CAB_data_dem$trust_EU_negative =  rescale(CAB_data_dem$trust_EU_n, to = c(0, 1)) # 1 means not at all
idconsisten_conserv = cbind(
CAB_data_dem$trust_central_n_sc,
CAB_data_dem$trust_local_n_sc,
CAB_data_dem$system_capable_n_sc,
CAB_data_dem$system_proud_n_sc,
CAB_data_dem$trust_state_n_sc,
CAB_data_dem$system_deserves_n_sc,
CAB_data_dem$system_live_n_sc,
CAB_data_dem$trust_US_negative,
CAB_data_dem$trust_china_n_sc,
CAB_data_dem$trust_russia_n_sc,
CAB_data_dem$trust_EU_negative,
CAB_data_dem$pol_news_tv_n_sc)
cronbach(idconsisten_conserv)
CAB_data_dem$idconsisten_conserv <- rescale(
CAB_data_dem$trust_central_n_sc +
CAB_data_dem$trust_local_n_sc +
CAB_data_dem$system_capable_n_sc +
CAB_data_dem$system_proud_n_sc +
CAB_data_dem$trust_state_n_sc +
CAB_data_dem$system_deserves_n_sc +
CAB_data_dem$system_live_n_sc +
CAB_data_dem$trust_US_negative +
CAB_data_dem$trust_china_n_sc +
CAB_data_dem$trust_russia_n_sc +
CAB_data_dem$trust_EU_negative +
CAB_data_dem$pol_news_tv_n_sc,
to = c(0, 1)
)
summary(CAB_data_dem$idconsisten_conserv_index)
hist(CAB_data_dem$idconsisten_conserv_index)
summary(CAB_data_dem$idconsisten_conserv)
hist(CAB_data_dem$idconsisten_conserv)
surv_averse_lib = cbind(
CAB_data_dem$tracking_central_sur_ave_lib,
CAB_data_dem$tracking_local_sur_ave_lib,
CAB_data_dem$tracking_companies_sur_ave_lib,
# CAB_data_dem$sm_engage_friends_sur_ave_lib,
# CAB_data_dem$sm_engage_groups_sur_ave_lib)
# CAB_data_dem$news_balance_n_sc,
CAB_data_dem$trust_western_n_sc)
cronbach(surv_averse_lib)
##urveillance-Averse Libertarians####
CAB_data_dem$tracking_central_sur_ave_lib =  rescale(CAB_data_dem$tracking_central_n, to = c(1, 0)) #1 means not comfortable at all
CAB_data_dem$tracking_local_sur_ave_lib =  rescale(CAB_data_dem$tracking_local_n, to = c(1, 0)) #1 means not comfortable at all
CAB_data_dem$tracking_companies_sur_ave_lib =  rescale(CAB_data_dem$tracking_companies_n, to = c(1, 0)) #1 means not comfortable at all
surv_averse_lib = cbind(
CAB_data_dem$tracking_central_sur_ave_lib,
CAB_data_dem$tracking_local_sur_ave_lib,
CAB_data_dem$tracking_companies_sur_ave_lib,
# CAB_data_dem$sm_engage_friends_sur_ave_lib,
# CAB_data_dem$sm_engage_groups_sur_ave_lib)
# CAB_data_dem$news_balance_n_sc,
CAB_data_dem$trust_western_n_sc)
cronbach(surv_averse_lib)
surv_averse_lib = cbind(
CAB_data_dem$tracking_central_sur_ave_lib,
CAB_data_dem$tracking_local_sur_ave_lib,
CAB_data_dem$tracking_companies_sur_ave_lib,
# CAB_data_dem$sm_engage_friends_sur_ave_lib,
# CAB_data_dem$sm_engage_groups_sur_ave_lib)
CAB_data_dem$news_balance_n_sc,
CAB_data_dem$trust_western_n_sc)
cronbach(surv_averse_lib)
CAB_data_dem$surv_averse_lib_index <- rescale(
CAB_data_dem$tracking_central_sur_ave_lib+
CAB_data_dem$tracking_local_sur_ave_lib+
CAB_data_dem$tracking_companies_sur_ave_lib+
CAB_data_dem$trust_western_n_sc,
to = c(0, 1)
)
summary(CAB_data_dem$surv_averse_lib_index)
hist(CAB_data_dem$surv_averse_lib_index)
# Polarized Echo Chamber ####
polarized_echo_chamber = cbind(
CAB_data_dem$avoidance_unfriending_n_sc,
CAB_data_dem$avoidance_blocking_n_sc,
# CAB_data_dem$echo_chamber_n_sc,
CAB_data_dem$sm_disagreement_politics_n_sc,
# CAB_data_dem$news_balance_n_sc,
CAB_data_dem$sm_disagreement_news_n_sc,
CAB_data_dem$sm_disagreement_issues_n_sc)
cronbach(polarized_echo_chamber)
##Surveillance-Averse Libertarians####
CAB_data_dem$tracking_central_sur_ave_lib =  rescale(CAB_data_dem$tracking_central_n, to = c(1, 0)) #1 means not comfortable at all
CAB_data_dem$tracking_local_sur_ave_lib =  rescale(CAB_data_dem$tracking_local_n, to = c(1, 0)) #1 means not comfortable at all
CAB_data_dem$tracking_companies_sur_ave_lib =  rescale(CAB_data_dem$tracking_companies_n, to = c(1, 0)) #1 means not comfortable at all
surv_averse_lib = cbind(
CAB_data_dem$tracking_central_sur_ave_lib,
CAB_data_dem$tracking_local_sur_ave_lib,
CAB_data_dem$tracking_companies_sur_ave_lib,
CAB_data_dem$trust_western_n_sc)
cronbach(surv_averse_lib) #.50
# List of social media platforms and corresponding variables
platforms <- c("facebook", "vkontakte", "instagram", "tiktok", "twitter", "youtube", "whatsapp", "telegram")
variables <- c("q23_a", "q23_b", "q23_c", "q23_d", "q23_e", "q23_f", "q23_g", "q23_h")
# Loop over each platform and create numeric versions of each social media usage variable
for (i in seq_along(variables)) {
CAB_data_dem <- CAB_data_dem %>%
mutate(
!!paste0(platforms[i], "_sm_no_n") := case_when(
q22 == 2 ~ 0,       # Set to 0 if q22 is 2
TRUE ~ as.numeric(.data[[variables[i]]])  # Use the corresponding q23_ variable
)
)
}
names(CAB_data_dem)
table(CAB_data_dem$facebook_sm_no_n
table(CAB_data_dem$facebook_sm_no_n)
table(CAB_data_dem$facebook_sm_no_n)
# List of social media platforms and corresponding variables
platforms <- c("facebook_n_sc", "vkontakte_n_sc", "instagram_n_sc", "tiktok_n_sc", "twitter_n_sc", "youtube_n_sc", "whatsapp_n_sc", "telegram_n_sc")
variables <- c("q23_a", "q23_b", "q23_c", "q23_d", "q23_e", "q23_f", "q23_g", "q23_h")
# Loop over each platform and create numeric versions of each social media usage variable
for (i in seq_along(variables)) {
CAB_data_dem <- CAB_data_dem %>%
mutate(
!!paste0(platforms[i], "_sm_no") := case_when(
q22 == 2 ~ 0,       # Set to 0 if q22 is 2
TRUE ~ as.numeric(.data[[variables[i]]])  # Use the corresponding q23_ variable
)
)
}
table(CAB_data_dem$facebook_sm_no_n)
table(CAB_data_dem$facebook_n_sc_sm_no)
table(CAB_data_dem$facebook_n_sc_sm_no)
table(CAB_data_dem$facebook_n_sc)
# Rescale the new numeric columns to range 0-1
CAB_data_dem <- CAB_data_dem %>%
mutate(
across(ends_with("_n_sc_sm_no_n"), ~ rescale(., to = c(0, 1)))
)
# Display summaries for verification
for (platform in platforms) {
print(paste0("Summary for ", platform, " (numeric):"))
print(summary(CAB_data_dem[[paste0(platform, "_n_sc_sm_no_n")]]))
}
print(summary(CAB_data_dem[[paste0(platform, "_n_sc_sm_no_n")]]))
print(paste0("Summary for ", platforms, " (numeric):"))
table(CAB_data_dem$facebook_n_sc_sm_no)
CAB_data_dem <- CAB_data_dem %>%
mutate(
!!paste0(platforms[i], "_1sm_no") := case_when(
q22 == 2 ~ 0,       # Set to 0 if q22 is 2
TRUE ~ as.numeric(.data[[variables[i]]])  # Use the corresponding q23_ variable
)
)
# Loop over each platform and create numeric versions of each social media usage variable
for (i in seq_along(variables)) {
CAB_data_dem <- CAB_data_dem %>%
mutate(
!!paste0(platforms[i], "_1sm_no") := case_when(
q22 == 2 ~ 0,       # Set to 0 if q22 is 2
TRUE ~ as.numeric(.data[[variables[i]]])  # Use the corresponding q23_ variable
)
)
}
# Rescale the new numeric columns to range 0-1
CAB_data_dem <- CAB_data_dem %>%
mutate(
across(ends_with("_1sm_no_n"), ~ rescale(., to = c(0, 1)))
)
# Display summaries for verification
for (platform in platforms) {
print(paste0("Summary for ", platforms, " (numeric):"))
print(summary(CAB_data_dem[[paste0(platform, "1sm_no_n")]]))
}
print(summary(CAB_data_dem[[paste0(platform, "1sm_no")]]))
# Display summaries for verification
for (platform in platforms) {
print(paste0("Summary for ", platforms, " (numeric):"))
print(summary(CAB_data_dem[[paste0(platform, "1sm_no")]]))
}
# Display summaries for verification
for (platform in platforms) {
print(paste0("Summary for ", platforms, " (numeric):"))
print(summary(CAB_data_dem[[paste0(platform, "_1sm_no")]]))
}
# Rescale the new numeric columns to range 0-1
CAB_data_dem <- CAB_data_dem %>%
mutate(
across(ends_with("_1sm_no_n"), ~ rescale(., to = c(0, 1)))
)
# Display summaries for verification
for (platform in platforms) {
print(paste0("Summary for ", platforms, " (numeric):"))
print(summary(CAB_data_dem[[paste0(platform, "_1sm_no")]]))
}
print(paste0("Summary for ", platform, " (numeric):"))
# Display summaries for verification
for (platform in platforms) {
print(paste0("Summary for ", platform, " (numeric):"))
print(summary(CAB_data_dem[[paste0(platform, "_1sm_no")]]))
}
# Loop over each platform and create numeric versions of each social media usage variable
for (i in seq_along(variables)) {
CAB_data_dem <- CAB_data_dem %>%
mutate(
!!paste0(platforms[i], "_1sm_no") := case_when(
q22 == 2 ~ 0,       # Set to 0 if q22 is 2
TRUE ~ as.numeric(.data[[variables[i]]])  # Use the corresponding q23_ variable
)
)
}
# Rescale the new numeric columns to range 0-1
CAB_data_dem <- CAB_data_dem %>%
mutate(
across(ends_with("_1sm_no"), ~ scales::rescale(., to = c(0, 1)))
)
# Display summaries for verification
for (platform in platforms) {
print(paste0("Summary for ", platform, " (numeric):"))
print(summary(CAB_data_dem[[paste0(platform, "_1sm_no")]]))
}
table(CAB_data_dem$facebook_n_sc_1sm_no)
# List of social media platforms and corresponding variables
platforms <- c("facebook_n_sc", "vkontakte_n_sc", "instagram_n_sc", "tiktok_n_sc", "twitter_n_sc", "youtube_n_sc", "whatsapp_n_sc", "telegram_n_sc")
variables <- c("q23_a", "q23_b", "q23_c", "q23_d", "q23_e", "q23_f", "q23_g", "q23_h")
# Loop over each platform and create numeric versions of each social media usage variable
for (i in seq_along(variables)) {
CAB_data_dem <- CAB_data_dem %>%
mutate(
!!paste0(platforms[i], "_1sm_no") := case_when(
q22 == 2 ~ 0,       # Set to 0 if q22 is 2
TRUE ~ as.numeric(.data[[variables[i]]])  # Use the corresponding q23_ variable
)
)
}
# Rescale the new numeric columns to range 0-1
CAB_data_dem <- CAB_data_dem %>%
mutate(
across(ends_with("_1sm_no"), ~ scales::rescale(., to = c(0, 1)))
)
# Display summaries for verification
for (platform in platforms) {
print(paste0("Summary for ", platform, " (numeric):"))
print(summary(CAB_data_dem[[paste0(platform, "_1sm_no")]]))
}
table(CAB_data_dem$facebook_n_sc_1sm_no)
#General Social Media Index
CAB_data_dem$gen_sm_index = cbind(
CAB_data_dem$facebook_n_sc_1sm_no,
CAB_data_dem$vkontakte_n_sc_1sm_no,
CAB_data_dem$instagram_n_sc_1sm_no,
CAB_data_dem$tiktok_n_sc_1sm_no,
CAB_data_dem$twitter_n_sc_1sm_no)
cronbach(gen_sm_index)
cronbach(gen_sm_index)
#General Social Media Index
CAB_data_dem$gen_sm_index = cbind(
CAB_data_dem$facebook_n_sc_1sm_no,
CAB_data_dem$vkontakte_n_sc_1sm_no,
CAB_data_dem$instagram_n_sc_1sm_no,
CAB_data_dem$tiktok_n_sc_1sm_no,
CAB_data_dem$twitter_n_sc_1sm_no)
#General Social Media Index
gen_sm_index = cbind(
CAB_data_dem$facebook_n_sc_1sm_no,
CAB_data_dem$vkontakte_n_sc_1sm_no,
CAB_data_dem$instagram_n_sc_1sm_no,
CAB_data_dem$tiktok_n_sc_1sm_no,
CAB_data_dem$twitter_n_sc_1sm_no)
cronbach(gen_sm_index)
CAB_data_dem$gen_sm_index = gen_sm_index <- cbind(
CAB_data_dem$facebook_n_sc_1sm_no,
CAB_data_dem$vkontakte_n_sc_1sm_no,
CAB_data_dem$instagram_n_sc_1sm_no,
CAB_data_dem$tiktok_n_sc_1sm_no,
CAB_data_dem$twitter_n_sc_1sm_no
)
CAB_data_dem$gen_sm_index <-
CAB_data_dem$facebook_sm_no_n +
CAB_data_dem$vkontakte_sm_no_n +
CAB_data_dem$instagram_sm_no_n +
CAB_data_dem$tiktok_sm_no_n +
CAB_data_dem$twitter_sm_no_n
CAB_data_dem$gen_sm_index2 <-  rescale(
CAB_data_dem$facebook_sm_no_n +
CAB_data_dem$vkontakte_sm_no_n +
CAB_data_dem$instagram_sm_no_n +
CAB_data_dem$tiktok_sm_no_n +
CAB_data_dem$twitter_sm_no_n, to = c(0, 1)
)
table(CAB_data_dem$gen_sm_index)
table(CAB_data_dem$gen_sm_index2)
save.image("~/GitHub/GitHub-CAB-Issues/CAB_data.RData")
