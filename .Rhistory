!!paste0(platforms[i], "_1sm_no") := case_when(
q22 == 2 ~ 0,       # Set to 0 if q22 is 2
TRUE ~ as.numeric(.data[[variables[i]]])  # Use the corresponding q23_ variable
)
)
# Loop over each platform and create numeric versions of each social media usage variable
for (i in seq_along(variables)) {
CAB_data_dem <- CAB_data_dem %>%
mutate(
!!paste0(platforms[i], "_1sm_no") := case_when(
q22 == 2 ~ 0,       # Set to 0 if q22 is 2
TRUE ~ as.numeric(.data[[variables[i]]])  # Use the corresponding q23_ variable
)
)
}
# Rescale the new numeric columns to range 0-1
CAB_data_dem <- CAB_data_dem %>%
mutate(
across(ends_with("_1sm_no_n"), ~ rescale(., to = c(0, 1)))
)
# Display summaries for verification
for (platform in platforms) {
print(paste0("Summary for ", platforms, " (numeric):"))
print(summary(CAB_data_dem[[paste0(platform, "1sm_no_n")]]))
}
print(summary(CAB_data_dem[[paste0(platform, "1sm_no")]]))
# Display summaries for verification
for (platform in platforms) {
print(paste0("Summary for ", platforms, " (numeric):"))
print(summary(CAB_data_dem[[paste0(platform, "1sm_no")]]))
}
# Display summaries for verification
for (platform in platforms) {
print(paste0("Summary for ", platforms, " (numeric):"))
print(summary(CAB_data_dem[[paste0(platform, "_1sm_no")]]))
}
# Rescale the new numeric columns to range 0-1
CAB_data_dem <- CAB_data_dem %>%
mutate(
across(ends_with("_1sm_no_n"), ~ rescale(., to = c(0, 1)))
)
# Display summaries for verification
for (platform in platforms) {
print(paste0("Summary for ", platforms, " (numeric):"))
print(summary(CAB_data_dem[[paste0(platform, "_1sm_no")]]))
}
print(paste0("Summary for ", platform, " (numeric):"))
# Display summaries for verification
for (platform in platforms) {
print(paste0("Summary for ", platform, " (numeric):"))
print(summary(CAB_data_dem[[paste0(platform, "_1sm_no")]]))
}
# Loop over each platform and create numeric versions of each social media usage variable
for (i in seq_along(variables)) {
CAB_data_dem <- CAB_data_dem %>%
mutate(
!!paste0(platforms[i], "_1sm_no") := case_when(
q22 == 2 ~ 0,       # Set to 0 if q22 is 2
TRUE ~ as.numeric(.data[[variables[i]]])  # Use the corresponding q23_ variable
)
)
}
# Rescale the new numeric columns to range 0-1
CAB_data_dem <- CAB_data_dem %>%
mutate(
across(ends_with("_1sm_no"), ~ scales::rescale(., to = c(0, 1)))
)
# Display summaries for verification
for (platform in platforms) {
print(paste0("Summary for ", platform, " (numeric):"))
print(summary(CAB_data_dem[[paste0(platform, "_1sm_no")]]))
}
table(CAB_data_dem$facebook_n_sc_1sm_no)
# List of social media platforms and corresponding variables
platforms <- c("facebook_n_sc", "vkontakte_n_sc", "instagram_n_sc", "tiktok_n_sc", "twitter_n_sc", "youtube_n_sc", "whatsapp_n_sc", "telegram_n_sc")
variables <- c("q23_a", "q23_b", "q23_c", "q23_d", "q23_e", "q23_f", "q23_g", "q23_h")
# Loop over each platform and create numeric versions of each social media usage variable
for (i in seq_along(variables)) {
CAB_data_dem <- CAB_data_dem %>%
mutate(
!!paste0(platforms[i], "_1sm_no") := case_when(
q22 == 2 ~ 0,       # Set to 0 if q22 is 2
TRUE ~ as.numeric(.data[[variables[i]]])  # Use the corresponding q23_ variable
)
)
}
# Rescale the new numeric columns to range 0-1
CAB_data_dem <- CAB_data_dem %>%
mutate(
across(ends_with("_1sm_no"), ~ scales::rescale(., to = c(0, 1)))
)
# Display summaries for verification
for (platform in platforms) {
print(paste0("Summary for ", platform, " (numeric):"))
print(summary(CAB_data_dem[[paste0(platform, "_1sm_no")]]))
}
table(CAB_data_dem$facebook_n_sc_1sm_no)
#General Social Media Index
CAB_data_dem$gen_sm_index = cbind(
CAB_data_dem$facebook_n_sc_1sm_no,
CAB_data_dem$vkontakte_n_sc_1sm_no,
CAB_data_dem$instagram_n_sc_1sm_no,
CAB_data_dem$tiktok_n_sc_1sm_no,
CAB_data_dem$twitter_n_sc_1sm_no)
cronbach(gen_sm_index)
cronbach(gen_sm_index)
#General Social Media Index
CAB_data_dem$gen_sm_index = cbind(
CAB_data_dem$facebook_n_sc_1sm_no,
CAB_data_dem$vkontakte_n_sc_1sm_no,
CAB_data_dem$instagram_n_sc_1sm_no,
CAB_data_dem$tiktok_n_sc_1sm_no,
CAB_data_dem$twitter_n_sc_1sm_no)
#General Social Media Index
gen_sm_index = cbind(
CAB_data_dem$facebook_n_sc_1sm_no,
CAB_data_dem$vkontakte_n_sc_1sm_no,
CAB_data_dem$instagram_n_sc_1sm_no,
CAB_data_dem$tiktok_n_sc_1sm_no,
CAB_data_dem$twitter_n_sc_1sm_no)
cronbach(gen_sm_index)
CAB_data_dem$gen_sm_index = gen_sm_index <- cbind(
CAB_data_dem$facebook_n_sc_1sm_no,
CAB_data_dem$vkontakte_n_sc_1sm_no,
CAB_data_dem$instagram_n_sc_1sm_no,
CAB_data_dem$tiktok_n_sc_1sm_no,
CAB_data_dem$twitter_n_sc_1sm_no
)
CAB_data_dem$gen_sm_index <-
CAB_data_dem$facebook_sm_no_n +
CAB_data_dem$vkontakte_sm_no_n +
CAB_data_dem$instagram_sm_no_n +
CAB_data_dem$tiktok_sm_no_n +
CAB_data_dem$twitter_sm_no_n
CAB_data_dem$gen_sm_index2 <-  rescale(
CAB_data_dem$facebook_sm_no_n +
CAB_data_dem$vkontakte_sm_no_n +
CAB_data_dem$instagram_sm_no_n +
CAB_data_dem$tiktok_sm_no_n +
CAB_data_dem$twitter_sm_no_n, to = c(0, 1)
)
table(CAB_data_dem$gen_sm_index)
table(CAB_data_dem$gen_sm_index2)
save.image("~/GitHub/GitHub-CAB-Issues/CAB_data.RData")
load("~/GitHub/GitHub-CAB-Issues/CAB_data.RData")
# Display summaries for verification
for (platform in platforms) {
print(paste0("Summary for ", platform, " (numeric):"))
print(summary(CAB_data_dem[[paste0(platform, "_1sm_no")]]))
}
names(CAB_data_dem)
#General Social Media Index
gen_sm_index = cbind(
CAB_data_dem$facebook_n_sc_1sm_no,
CAB_data_dem$vkontakte_n_sc_1sm_no,
CAB_data_dem$instagram_n_sc_1sm_no,
CAB_data_dem$tiktok_n_sc_1sm_no,
CAB_data_dem$twitter_n_sc_1sm_no)
cronbach(gen_sm_index)
library(psy)
#General Social Media Index
gen_sm_index = cbind(
CAB_data_dem$facebook_n_sc_1sm_no,
CAB_data_dem$vkontakte_n_sc_1sm_no,
CAB_data_dem$instagram_n_sc_1sm_no,
CAB_data_dem$tiktok_n_sc_1sm_no,
CAB_data_dem$twitter_n_sc_1sm_no)
cronbach(gen_sm_index)
load("~/GitHub/GitHub-CAB-Issues/CAB_data.RData")
# Display summaries for verification
for (platform in platforms) {
print(paste0("Summary for ", platform, " (numeric):"))
print(summary(CAB_data_dem[[paste0(platform, "_1sm_no")]]))
}
table(CAB_data_dem$q23_a)
table(CAB_data_dem$facebook_n_sc)
table(CAB_data_dem$facebook)
table(CAB_data_dem$q22)
table(CAB_data_dem$facebook_n_sc_1sm_no)
table(CAB_data_dem$q23_a)
CAB_data_dem$xxx = rescale(CAB_data_dem$q23a, to = c(0,1))
library(scales)
CAB_data_dem$xxx = rescale(CAB_data_dem$q23a, to = c(0,1))
table(CAB_data_dem$xxx)
names(CAB_data_dem)
table(CAB_data_dem$facebook_n)
# List of social media platforms and corresponding variables
platforms <- c("facebook_n_sc", "vkontakte_n_sc", "instagram_n_sc", "tiktok_n_sc", "twitter_n_sc", "youtube_n_sc", "whatsapp_n_sc", "telegram_n_sc")
variables <- c("facebook_n", "vkontakte_n", "instagram_n", "tiktok_n", "twitter_n", "youtube_n", "whatsapp_n", "telegram_n")
library(dplyr)
# Loop over each platform and create numeric versions of each social media usage variable
for (i in seq_along(variables)) {
CAB_data_dem <- CAB_data_dem %>%
mutate(
!!paste0(platforms[i], "_1sm_no") := case_when(
q22 == 2 ~ 0,       # Set to 0 if q22 is 2
TRUE ~ as.numeric(.data[[variables[i]]])  # Use the corresponding q23_ variable
)
)
}
# Rescale the new numeric columns to range 0-1
CAB_data_dem <- CAB_data_dem %>%
mutate(
across(ends_with("_1sm_no"), ~ scales::rescale(., to = c(0, 1)))
)
# Display summaries for verification
for (platform in platforms) {
print(paste0("Summary for ", platform, " (numeric):"))
print(summary(CAB_data_dem[[paste0(platform, "_1sm_no")]]))
}
table(CAB_data_dem$facebook_n_sc_1sm_no)
table(CAB_data_dem$facebook_n)
d
table(CAB_data_dem$facebook_n)
table(CAB_data_dem$facebook_n_sc_1sm_no)
table(CAB_data_dem$q24_a)
table(CAB_data_dem$pol_news_facebook_n)
table(CAB_data_dem$pol_news_facebook_n_sc)
table(CAB_data_dem$pol_news_facebook_n_sc)
names(CAB_data_dem)
table(CAB_data_dem$q24_a)
table(CAB_data_dem$q22)
table(CAB_data_dem$q24_a)
table(CAB_data_dem$q23_a)
table(CAB_data_dem$facebook)
library(dplyr)
# Update CAB_data_dem dataframe
CAB_data_dem <- CAB_data_dem %>%
mutate(
facebook_n_sc = ifelse(pol_news_facebook_n_sc == 0 & facebook_n_sc == 0, facebook_n_sc + pol_news_facebook_n_sc, facebook_n_sc),
vkontakte_n_sc = ifelse(pol_news_vkontakte_n_sc == 0 & vkontakte_n_sc == 0, vkontakte_n_sc + pol_news_vkontakte_n_sc, vkontakte_n_sc),
tiktok_n_sc = ifelse(pol_news_tiktok_n_sc == 0 & tiktok_n_sc == 0, tiktok_n_sc + pol_news_tiktok_n_sc, tiktok_n_sc),
twitter_n_sc = ifelse(pol_news_twitter_n_sc == 0 & twitter_n_sc == 0, twitter_n_sc + pol_news_twitter_n_sc, twitter_n_sc)
)
table(CAB_data_dem$pol_news_facebook_n_sc)
load("~/GitHub/GitHub-CAB-Issues/CAB_data.RData")
table(CAB_data_dem$facebook_n_sc_1sm_no)
library(dplyr)
# Create new variables combining the 0 values from set 1 and set 2
CAB_data_dem <- CAB_data_dem %>%
mutate(
facebook_n_sc_combined = ifelse(pol_news_facebook_n_sc == 0 & facebook_n_sc_1sm_no == 0, 0, pol_news_facebook_n_sc),
vkontakte_n_sc_combined = ifelse(pol_news_vkontakte_n_sc == 0 & vkontakte_n_sc_1sm_no == 0, 0, pol_news_vkontakte_n_sc),
tiktok_n_sc_combined = ifelse(pol_news_tiktok_n_sc == 0 & tiktok_n_sc_1sm_no == 0, 0, pol_news_tiktok_n_sc),
twitter_n_sc_combined = ifelse(pol_news_twitter_n_sc == 0 & twitter_n_sc_1sm_no == 0, 0, pol_news_twitter_n_sc)
)
table(CAB_data_dem$facebook_n_sc_combined)
table(CAB_data_dem$facebook_n_sc_1sm_no)
table(CAB_data_dem$pol_news_facebook_n_sc)
CAB_data_dem <- CAB_data_dem %>%
mutate(
facebook_n_sc_combined = ifelse(facebook_n_sc_1sm_no == 0, 0, pol_news_facebook_n_sc),
vkontakte_n_sc_combined = ifelse(vkontakte_n_sc_1sm_no == 0, 0, pol_news_vkontakte_n_sc),
tiktok_n_sc_combined = ifelse(tiktok_n_sc_1sm_no == 0, 0, pol_news_tiktok_n_sc),
twitter_n_sc_combined = ifelse(twitter_n_sc_1sm_no == 0, 0, pol_news_twitter_n_sc)
)
table(CAB_data_dem$facebook_n_sc_combined)
# Create new variables combining the 0 values from set 1 and set 2
CAB_data_dem <- CAB_data_dem %>%
mutate(
pol_news_facebook_n_sc_combined = ifelse(facebook_n_sc_1sm_no == 0, 0, pol_news_facebook_n_sc),
pol_news_vkontakte_n_sc_combined = ifelse(vkontakte_n_sc_1sm_no == 0, 0, pol_news_vkontakte_n_sc),
pol_news_tiktok_n_sc_combined = ifelse(tiktok_n_sc_1sm_no == 0, 0, pol_news_tiktok_n_sc),
pol_news_twitter_n_sc_combined = ifelse(twitter_n_sc_1sm_no == 0, 0, pol_news_twitter_n_sc)
)
# Create new variables combining the 0 values from set 1 and set 2
table(CAB_data_dem$trust_facebook_n_sc)
table(CAB_data_dem$trust_facebook_n_sc)
CAB_data_dem <- CAB_data_dem %>%
mutate(
trust_facebook_n_sc_combined = ifelse(facebook_n_sc_1sm_no == 0, 0, trust_facebook_n_sc),
trust_vkontakte_n_sc_combined = ifelse(vkontakte_n_sc_1sm_no == 0, 0, trust_vkontakte_n_sc)
)
table(CAB_data_dem$trust_facebook_n_sc_combined)
# List of social media platforms and corresponding variables
table(CAB_data_dem$sm_critical_central_n_sc)
# Loop over each platform and create numeric versions of each social media usage variable
for (i in seq_along(variables1)) {
CAB_data_dem <- CAB_data_dem %>%
mutate(
!!paste0(platforms1[i], "_sm_no") := case_when(
q22 == 2 ~ 0,       # Set to 0 if q22 is 2
TRUE ~ as.numeric(.data[[variables[i]]])  # Use the corresponding variable
)
)
}
platforms1 <- c("sm_critical_central_n_sc", "sm_critical_local_n_sc")
variables1 <- c("sm_critical_central_n_sc", "sm_critical_local_n_sc")
library(dplyr)
# Loop over each platform and create numeric versions of each social media usage variable
for (i in seq_along(variables1)) {
CAB_data_dem <- CAB_data_dem %>%
mutate(
!!paste0(platforms1[i], "_sm_no") := case_when(
q22 == 2 ~ 0,       # Set to 0 if q22 is 2
TRUE ~ as.numeric(.data[[variables[i]]])  # Use the corresponding variable
)
)
}
# Rescale the new numeric columns to range 0-1
CAB_data_dem <- CAB_data_dem %>%
mutate(
across(ends_with("_sm_no"), ~ scales::rescale(., to = c(1, 0)))
)
library(dplyr)
# Loop over each platform and create numeric versions of each social media usage variable
for (i in seq_along(variables1)) {
CAB_data_dem <- CAB_data_dem %>%
mutate(
!!paste0(platforms1[i], "_sm_no") := case_when(
q22 == 2 ~ 0,       # Set to 0 if q22 is 2
TRUE ~ as.numeric(.data[[variables1[i]]])  # Use the corresponding variable
)
)
}
# Rescale the new numeric columns to range 0-1
CAB_data_dem <- CAB_data_dem %>%
mutate(
across(ends_with("_sm_no"), ~ scales::rescale(., to = c(1, 0)))
)
platforms1 <- c("sm_critical_central_n_sc", "sm_critical_local_n_sc")
variables1 <- c("sm_critical_central_n_sc", "sm_critical_local_n_sc")
# Loop over each platform and create numeric versions of each social media usage variable
for (i in seq_along(variables1)) {
CAB_data_dem <- CAB_data_dem %>%
mutate(
!!paste0(platforms1[i], "_sm_no") := case_when(
q22 == 2 ~ 0,       # Set to 0 if q22 is 2
TRUE ~ as.numeric(.data[[variables1[i]]])  # Use the corresponding variable
)
)
}
table(CAB_data_dem$sm_critical_central_n_sc_sm_no)
CAB_data_dem$sm_critical_central_n_sc_sm_no = NULL
for (i in seq_along(variables1)) {
CAB_data_dem <- CAB_data_dem %>%
mutate(
!!paste0(platforms1[i], "_sm_no") := case_when(
q22 == 2 ~ 0,       # Set to 0 if q22 is 2
TRUE ~ as.numeric(.data[[variables1[i]]])  # Use the corresponding variable
)
)
}
table(CAB_data_dem$sm_critical_central_n_sc_sm_no)
table(CAB_data_dem$sm_critical_local_n_sc_sm_no)
table(CAB_data_dem$sm_positive_central_n_sc)
platforms1 <- c("sm_positive_central_n_sc", "sm_positive_local_n_sc")
variables1 <- c("sm_positive_central_n_sc", "sm_positive_local_n_sc")
library(dplyr)
# Loop over each platform and create numeric versions of each social media usage variable
for (i in seq_along(variables1)) {
CAB_data_dem <- CAB_data_dem %>%
mutate(
!!paste0(platforms1[i], "_sm_no") := case_when(
q22 == 2 ~ 0,       # Set to 0 if q22 is 2
TRUE ~ as.numeric(.data[[variables1[i]]])  # Use the corresponding variable
)
)
}
table(CAB_data_dem$sm_positive_central_n_sc_sm_no)
table(CAB_data_dem$sm_positive_local_n_sc_sm_no)
# Create new variables combining the 0 values from set 1 and set 2
# List of social media platforms and corresponding variables
table(CAB_data_dem$sm_positive_central_n_sc)
table(CAB_data_dem$sm_positive_central_n_sc_sm_no)
# Create new variables combining the 0 values from set 1 and set 2
table(CAB_data_dem$echo_chamber_n_sc)
# List of social media platforms and corresponding variables
table(CAB_data_dem$sm_positive_central_n_sc)
platforms2 <- c("sm_positive_central_n_sc", "sm_positive_local_n_sc")
variables2 <- c("sm_positive_central_n_sc", "sm_positive_local_n_sc")
library(dplyr)
# Loop over each platform and create numeric versions of each social media usage variable
for (i in seq_along(variables2)) {
CAB_data_dem <- CAB_data_dem %>%
mutate(
!!paste0(platforms2[i], "_sm_no") := case_when(
q22 == 2 ~ 0,       # Set to 0 if q22 is 2
TRUE ~ as.numeric(.data[[variables2[i]]])  # Use the corresponding variable
)
)
}
table(CAB_data_dem$sm_positive_central_n_sc_sm_no)
table(CAB_data_dem$sm_positive_local_n_sc_sm_no)
platforms3 <- c("echo_chamber_n_sc")
variables3 <- c("echo_chamber_n_sc")
library(dplyr)
# Loop over each platform and create numeric versions of each social media usage variable
for (i in seq_along(variables3)) {
CAB_data_dem <- CAB_data_dem %>%
mutate(
!!paste0(platforms3[i], "_sm_no") := case_when(
q22 == 2 ~ 0,       # Set to 0 if q22 is 2
TRUE ~ as.numeric(.data[[variables3[i]]])  # Use the corresponding variable
)
)
}
table(CAB_data_dem$echo_chamber_n_sc_sm_no)
# Create new variables combining the 0 values from set 1 and set 2
# List of social media platforms and corresponding variables
table(CAB_data_dem$echo_chamber_n_sc)
save.image("~/GitHub/GitHub-CAB-Issues/CAB_data.RData")
load("~/GitHub/GitHub-CAB-Issues/CAB_data.RData")
CAB_data_dem$pol_discuss_n_sc = rescale(CAB_data_dem$pol_discuss_n, to = c(1, 0))
library(scales)
CAB_data_dem$pol_discuss_n_sc = rescale(CAB_data_dem$pol_discuss_n, to = c(1, 0))
table(CAB_data_dem$pol_discuss_n_sc)
table(CAB_data_dem$pol_discuss_n)
CAB_data_dem$pol_discuss_n_sc = as.numeric(CAB_data_dem$pol_discuss_n_sc)
# List of social media platforms and corresponding variables
platformsz <- c("pol_discuss_n_sc")
variablesz <- c("pol_discuss_n_sc")
library(dplyr)
# Loop over each platform and create numeric versions of each social media usage variable
for (i in seq_along(variablesz)) {
CAB_data_dem <- CAB_data_dem %>%
mutate(
!!paste0(platformsz[i], "_sm_no") := case_when(
q9 == 4 ~ 0,       # Set to 0 if q9 is 4
TRUE ~ as.numeric(.data[[variablesz[i]]])  # Use the corresponding q23_ variable
)
)
}
# Display summaries for verification
for (platform in platformsz) {
print(paste0("Summary for ", platform, " (numeric):"))
print(summary(CAB_data_dem[[paste0(platform, "_sm_no")]]))
}
# List of social media platforms and corresponding variables
platformsz <- c("pol_discuss_n_sc")
table(CAB_data_dem$pol_discuss_n_sc)
table(CAB_data_dem$pol_discuss_n_sc_sm_no)
CAB_data_dem$sm_disagreement_politics_n_sc
table(CAB_data_dem$sm_engage_friends_n_sc_sm_no)
CAB_data_dem$sm_engage_offline_sc_sm_no
CAB_data_dem$pol_dis_silob <- rescale(CAB_data_dem$pol_discuss_n_sc_sm_no, to = c(0, 1)) #1 means less
CAB_data_dem$trust_central_silob = rescale(CAB_data_dem$trust_central_n_sc, to = c(0, 1)) #1 means less
CAB_data_dem$trust_local_silob = rescale(CAB_data_dem$trust_local_n_sc, to = c(0, 1)) #1 means less
CAB_data_dem$sm_disagreement_politics_silob = rescale(CAB_data_dem$sm_disagreement_politics_n_sc, to = c(1, 0)) #see disagreement? #1 means very often
CAB_data_dem$sm_engage_friends_silob <- rescale(CAB_data_dem$sm_engage_friends_n_sc_sm_no, to = c(0, 1)) # 1 meas less
CAB_data_dem$sm_engage_groups_silob = rescale(CAB_data_dem$sm_engage_groups_n_sc_sm_no, to = c(0, 1)) # 1 meas less
CAB_data_dem$sm_engage_post_silob = rescale(CAB_data_dem$sm_engage_post_n_sc_sm_no, to = c(0, 1)) # 1 meas less
CAB_data_dem$sm_engage_critical_silob = rescale(CAB_data_dem$sm_engage_critical_n_sc_sm_no, to = c(0, 1)) # 1 meas less
CAB_data_dem$sm_engage_supportive_silob = rescale(CAB_data_dem$sm_engage_supportive_sc_sm_no, to = c(0, 1)) # 1 meas less
CAB_data_dem$sm_engage_offline_silob = rescale(CAB_data_dem$sm_engage_offline_sc_sm_no, to = c(0, 1)) # 1 meas less
CAB_data_dem$participate_rally_sil_obs = rescale(CAB_data_dem$participate_rally_n, to = c(0, 1))   # 1 means No
library(psy)
sil_obs <- cbind(
CAB_data_dem$pol_dis_silob,
CAB_data_dem$sm_engage_friends_silob,
CAB_data_dem$sm_engage_groups_silob,
CAB_data_dem$sm_engage_post_silob,
CAB_data_dem$sm_engage_supportive_silob,
CAB_data_dem$sm_engage_offline_silob,
CAB_data_dem$participate_rally_sil_obs)
cronbach(sil_obs)
CAB_data_dem$sil_obs_index <- rescale(
CAB_data_dem$pol_dis_silob +
CAB_data_dem$sm_engage_friends_silob +
CAB_data_dem$sm_engage_groups_silob +
CAB_data_dem$sm_engage_post_silob +
CAB_data_dem$sm_engage_supportive_silob +
CAB_data_dem$sm_engage_offline_silob +
CAB_data_dem$participate_rally_sil_obs,
to = c(0, 1)
)
table(CAB_data_dem$sil_obs_index)
summary(lm(critical_social_media ~ sil_obs_index + gen_sm_index + age_n_sc + urbanicity_Village + gender_Male + edu_n_sc + inc_n_sc + country_KZ + country_KG, data = CAB_data_dem))
summary(lm(positive_social_media ~ sil_obs_index + gen_sm_index + age_n_sc + urbanicity_Village + gender_Male + edu_n_sc + inc_n_sc + country_KZ + country_KG, data = CAB_data_dem))
summary(lm(critical_tv_index ~ sil_obs_index + gen_sm_index + age_n_sc + urbanicity_Village + gender_Male + edu_n_sc + inc_n_sc + country_KZ + country_KG, data = CAB_data_dem))
CAB_data_dem$sm_engage_friends_smw =  rescale(CAB_data_dem$sm_engage_friends_n_sc_sm_no, to = c(1, 0)) # 1 means more
CAB_data_dem$sm_engage_groups_smw =  rescale(CAB_data_dem$sm_engage_groups_n_sc_sm_no, to = c(1, 0)) # 1 means more
CAB_data_dem$sm_engage_post_smw = rescale(CAB_data_dem$sm_engage_post_n_sc_sm_no, to = c(1, 0)) # 1 means more
sm_warriors <- cbind(
CAB_data_dem$sm_engage_friends_smw,
CAB_data_dem$sm_engage_groups_smw,
CAB_data_dem$sm_engage_post_smw)
cronbach(sm_warriors)
CAB_data_dem$sm_warriors_index <- rescale(
CAB_data_dem$sm_engage_friends_smw+
CAB_data_dem$sm_engage_groups_smw+
CAB_data_dem$sm_engage_post_smw+
to = c(0, 1)
CAB_data_dem$sm_warriors_index <- rescale(
CAB_data_dem$sm_engage_friends_smw+
CAB_data_dem$sm_engage_groups_smw+
CAB_data_dem$sm_engage_post_smw,
to = c(0, 1)
)
selective_avoiders = cbind(
CAB_data_dem$avoidance_unfriending_n_sc_sm_no,
CAB_data_dem$avoidance_blocking_n_sc_sm_no,
CAB_data_dem$sm_disagreement_politics_n_sc_sm_no,
CAB_data_dem$sm_disagreement_news_n_sc_sm_no,
CAB_data_dem$sm_disagreement_issues_n_sc_sm_no)
cronbach(selective_avoiders)
CAB_data_dem$selective_avoiders_index <- rescale(
CAB_data_dem$avoidance_unfriending_n_sc_sm_no +
CAB_data_dem$avoidance_blocking_n_sc_sm_no +
CAB_data_dem$sm_disagreement_politics_n_sc_sm_no +
CAB_data_dem$sm_disagreement_news_n_sc_sm_no +
CAB_data_dem$sm_disagreement_issues_n_sc_sm_no +
to = c(0, 1)
CAB_data_dem$selective_avoiders_index <- rescale(
CAB_data_dem$avoidance_unfriending_n_sc_sm_no +
CAB_data_dem$avoidance_blocking_n_sc_sm_no +
CAB_data_dem$sm_disagreement_politics_n_sc_sm_no +
CAB_data_dem$sm_disagreement_news_n_sc_sm_no +
CAB_data_dem$sm_disagreement_issues_n_sc_sm_no,
to = c(0, 1)
)
save.image("~/GitHub/GitHub-CAB-Issues/CAB_data.RData")
